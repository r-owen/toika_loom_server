[build-system]
requires = [
    "setuptools>=61.0",
    "setuptools_scm[toml]>=8.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "toika_loom_server"
dynamic = ["version"]
description = "Web server that drives a Toika dobby loom"
readme = "README.md"
dependencies = [
  "base_loom_server >= 0.19",
]
authors = [
  { name="Russell Owen", email="r3owen@gmail.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
  "base_loom_server[dev] >= 0.26",
]

[project.scripts]
run_toika_loom = "toika_loom_server.main:run_toika_loom"

[project.urls]
Homepage = "https://pypi.org/project/toika-loom-server/"
Documentation = "https://r-owen.github.io/toika_loom_server/"
Source = "https://github.com/r-owen/toika_loom_server"
Issues = "https://github.com/r-owen/toika_loom_server/issues"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.setuptools_scm]
write_to = "src/toika_loom_server/version.py"
write_to_template = """
# Generated by setuptools_scm
__all__ = ["__version__"]
__version__ = "{version}"
"""

[tool.mypy]
exclude_gitignore = "true"
disallow_untyped_defs = "true"

[tool.ruff]
line-length = 110
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "BLE001", # Do not catch blind Exception
  "C408",  # Objects to `dict` for literals
  "C901",  # Too complex
  "COM812",  # Demand trailing commas; argues with the formatter
  "D100",  # Demand each module have a docstring
  "D104",  # Demand a doc string in __init__.py
  "D105",  # Demand that magic methods have docstrings
  "D107",  # Demand __init__ have a docstring
  "D205",  # Blank line between summary and descrption; good, but prevents multi-line docstring summaries
  "EM101",  # String literal in exception
  "EM102",  # F string in exception
  "G004",  # F string in log message
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments
  "PLR0915", # Too many statements
  "PT011", # Muzzle incorrect complaints about pytest.raises is too broad
  "RUF022",  # __all__ unsorted
  "S101",  # Reject assert, which I use to make mypy happy
  "S104",  # Don't bind to 0.0.0.0
  "S311",  # Pesudo-random generators are not safe for cryptography
  "TRY003",  # Long exception messages
  "TRY400", # Use `logging.exception` instead of `logging.error
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
  "INP001",  # Part of a namespace package
  "S101",  # Use of assert
  "D103",  # Missing docstring (I don't want one per test) ??? I could add them
  "ASYNC109",  # Timeout argument to async function
  "PLR2004", # Magic valule
]
